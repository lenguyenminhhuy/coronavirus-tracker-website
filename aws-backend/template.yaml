AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  coronavirus-tracker-website
  Great and Deep insights about the current pandemic!
  CloudFormation Template for SAM
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Environment:
      Variables:
        COVID_FULL_TABLE: "covid-full"
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 100

Resources:
  # Covid Lambda Function
  CovidFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/hello.handler
      Description: A simple example function for Hello Covid API
      Events:
        CovidDataAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /covid
            Method: GET
  

  # Shared layer with Lambda runtime dependencies
  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      LayerName: "coronavirus-tracker-website-dependencies"
      Description: Node.js Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs14.x
      RetentionPolicy: Retain
  

  # ------------------------------------SCRAPING PART----------------------------------------------------------------
  # GeneralPuppeteerLayer:
  #   Type: AWS::Serverless::LayerVersion
  #   Properties:
  #       LayerName: GeneralPuppeteerLayer
  #       Description: Hold Puppeteer library and node modules
  #       ContentUri: layers/puppeteer/
  #       CompatibleRuntimes:
  #       - nodejs14.x
  #   Metadata:
  #     BuildMethod: nodejs14.x
  
  BrowserAndUtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: BrowserAndUtilsLayer
      Description: Holds helper functions for application
      ContentUri: dist/utils/
      CompatibleRuntimes:
        - nodejs14.x
      RetentionPolicy: Delete

  ScarpingFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/scraping.handler
      MemorySize: 4096
      Layers:
        - !Ref BrowserAndUtilsLayer
      Events:
        ScarpingApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /api/getList/
            Method: get
    
    # ------------------------------------------TABLE----------------------------------------------------------
  CovidTimeSeriesTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: "CovidTimeSeriesTable"
      KeySchema: 
        - AttributeName: "iso_code"
          KeyType: "HASH"
        - AttributeName: "updated_date"
          KeyType: "RANGE"
      AttributeDefinitions:
        - AttributeName: "iso_code"
          AttributeType: "S"
        - AttributeName: "updated_date"
          AttributeType: "S"
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  
  GetDataDailyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/covidDaily.handler
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable, see https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html#dynamo-db-crud-policy
        - DynamoDBCrudPolicy:
            TableName: !Ref CovidTimeSeriesTable
      Environment:
        Variables:
          TABLE_NAME: !Ref CovidTimeSeriesTable
      Events:
        CheckWebsiteScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)


  GetDataDailyAPIFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/covidDailyAPI.handler
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable, see https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html#dynamo-db-crud-policy
        - DynamoDBCrudPolicy:
            TableName: !Ref CovidTimeSeriesTable
      Environment:
        Variables:
          TABLE_NAME: !Ref CovidTimeSeriesTable
      Events:
        GetDataDailyAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /getDaily/
            Method: get




  # ------------------------------------END OF SCRAPING----------------------------------------------------------------

# Created resources on AWS
Outputs:
  CovidAPI:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  CovidFunction:
    Description: "Covid Lambda Function ARN"
    Value: !GetAtt CovidFunction.Arn

  CovidFunctionIamRole:
    Description: "Implicit IAM Role created for Covid Function"
    Value: !GetAtt CovidFunctionRole.Arn
  

  # ------------------------------SCRAPING PART-------------------------------------------------------
  ScarpingApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/api/getList/"
  ScarpingFunction:
    Description: "Scarping Lambda Function ARN"
    Value: !GetAtt ScarpingFunction.Arn
  ScarpingFunctionIamRole:
    Description: "Implicit IAM Role created for Scarping function"
    Value: !GetAtt ScarpingFunctionRole.Arn
  # ------------------------------------END OF SCRAPING----------------------------------------------------------------
  
  # ------------------------------------------------INSERT AND VIEW DAILY DATA--------------------------------------------------------
  GetDataDailyFunction:
    Description: "Covid Lambda Function ARN"
    Value: !GetAtt GetDataDailyFunctionFunction.Arn

  GetDataDailyFunctionIamRole:
    Description: "Implicit IAM Role created for Covid Function"
    Value: !GetAtt GetDataDailyFunctionRole.Arn
  
  GetDataDailyAPI:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/getDaily/"

  GetDataDailyAPIFunction:
    Description: "Covid Lambda Function ARN"
    Value: !GetAtt GetDataDailyAPIFunction.Arn

  GetDataDailyAPIFunctionIamRole:
    Description: "Implicit IAM Role created for Covid Function"
    Value: !GetAtt GetDataDailyAPIFunctionRole.Arn
  
  # ------------------------------------------------END INSERT AND VIEW DAILY DATA--------------------------------------------------------
